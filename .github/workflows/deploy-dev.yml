name: Deploy to Dev Environment

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "deploy-dev" to confirm'
        required: true
        default: 'cancel'

env:
  AWS_REGION: eu-west-1
  BASE_STACK_NAME: s3-sns-notifier-dev
  STACK_RETENTION_DAYS: 1  # Shorter retention for dev

jobs:
  deploy:
    if: github.event.inputs.confirm == 'deploy-dev'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Generate unique stack name
      run: |
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        UNIQUE_ID=$(echo $GITHUB_SHA | cut -c1-7)
        echo "STACK_NAME=${BASE_STACK_NAME}-${TIMESTAMP}-${UNIQUE_ID}" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install dependencies
      run: |
        cd src/notify
        npm install
        cd ../..

    - name: SAM Build and Deploy
      run: |
        set -e
        trap 'aws cloudformation delete-stack --stack-name ${{ env.STACK_NAME }}' ERR
        
        sam build && sam deploy \
          --stack-name ${{ env.STACK_NAME }} \
          --region ${{ env.AWS_REGION }} \
          --capabilities CAPABILITY_IAM \
          --parameter-overrides "Environment=dev NotificationEmail=${{ secrets.NOTIFICATION_EMAIL }}" \
          --no-confirm-changeset \
          --resolve-s3

    - name: Cleanup old stacks
      if: always()
      run: |
        aws cloudformation list-stacks \
          --stack-status-filter CREATE_COMPLETE UPDATE_COMPLETE \
          --query "StackSummaries[?starts_with(StackName, '${{ env.BASE_STACK_NAME }}-') && \
          to_string(CreationTime) < '$(date -d "${{ env.STACK_RETENTION_DAYS }} days ago" --utc +'%Y-%m-%dT%H:%M:%S')'].StackName" \
          --output text | xargs -r -I {} aws cloudformation delete-stack --stack-name {}